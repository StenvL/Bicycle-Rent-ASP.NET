/*flexberryautogenerated="true"*/

namespace Bicycle_rent
{
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Web.Controls;
    using ICSSoft.STORMNET.Business;

    public partial class TakeBicycleE : BaseEditForm<RentSession>
    {
        /// <summary>
        /// Конструктор формы.
        /// </summary>
        public TakeBicycleE()
            : base(RentSession.Views.TakeBicycleE)
        {
        }

        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/Rent/TakeBicycleE.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
        }

        /// <summary>
        /// Здесь лучше всего писать бизнес-логику, оперируя только объектом данных.
        /// </summary>
        protected override void PreApplyToControls()
        {
        }

        /// <summary>
        /// Здесь лучше всего изменять свойства контролов на странице,
        /// которые не обрабатываются WebBinder.
        /// </summary>
        protected override void PostApplyToControls()
        {
            Page.Validate();
        }

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
        }

        /// <summary>
        /// Валидация объекта для сохранения.
        /// </summary>
        /// <returns>true - продолжать сохранение, иначе - прекратить.</returns>
        protected override bool PreSaveObject()
        {
            return base.PreSaveObject();
        }

        /// <summary>
        /// Нетривиальная логика сохранения объекта.
        /// </summary>
        /// <returns>Объект данных, который сохранился.</returns>
        protected override DataObject SaveObject()
        {
            return base.SaveObject();
        }

        private void CloseSession()
        {
            var ds = (SQLDataService)DataServiceProvider.DataService;

            var session = this.DataObject;
            session.FinishDate = ICSSoft.STORMNET.UserDataTypes.NullableDateTime.Now;
            session.Cost = System.Math.Round((System.DateTime.Parse(session.FinishDate.ToString()) - session.StartDate)
                .TotalMinutes) * session.Bicycle.CostPerMinute;
            session.State = SessionState.Закрыта;

            var bicycle = new Bicycle();
            bicycle.SetExistObjectPrimaryKey(session.Bicycle.__PrimaryKey);
            ds.LoadObject(bicycle);
            bicycle.CurPoint = session.EndPoint;
            bicycle.IsFree = true;

            var updObjs = new DataObject[] { session, bicycle };
            ds.UpdateObjects(ref updObjs);
        }
        protected override void SaveBtn_Click(object sender, System.Web.UI.ImageClickEventArgs e)
        {
            this.CloseSession();
        }
        protected override void SaveAndCloseBtn_Click(object sender, System.Web.UI.ImageClickEventArgs e)
        {
            this.CloseSession();
            Response.Redirect("/forms/Rent/TakeBicycleL.aspx");
        }
    }
}
