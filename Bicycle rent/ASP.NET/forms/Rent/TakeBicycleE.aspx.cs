/*flexberryautogenerated="true"*/

namespace Bicycle_rent
{
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Web.Controls;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.Web.AjaxControls;
    using ICSSoft.STORMNET.Business.LINQProvider;
    using System.Linq;

    public partial class TakeBicycleE : BaseEditForm<RentSession>
    {
        /// <summary>
        /// Конструктор формы.
        /// </summary>
        public TakeBicycleE()
            : base(RentSession.Views.TakeBicycleE)
        {
        }

        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/Rent/TakeBicycleE.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
            ctrlEmployeeTake.MasterViewName = Employee.Views.EmployeeL.Name;

            // Забрать велосипед может только директор или менеджер.
            var ds = DataServiceProvider.DataService;
            var queryEmp = ds.Query<Employee>(Employee.Views.EmployeeL.Name)
                .Where(item => item.Position.Equals(Positions.Директор) || item.Position.Equals(Positions.Менеджер));
            ctrlEmployeeTake.LimitFunction = LinqToLcs.GetLcs(
                queryEmp.Expression, Employee.Views.EmployeeL).LimitFunction;

        }

        /// <summary>
        /// Здесь лучше всего писать бизнес-логику, оперируя только объектом данных.
        /// </summary>
        protected override void PreApplyToControls()
        {
        }

        /// <summary>
        /// Здесь лучше всего изменять свойства контролов на странице,
        /// которые не обрабатываются WebBinder.
        /// </summary>
        protected override void PostApplyToControls()
        {
            Page.Validate();
        }

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
        }

        /// <summary>
        /// Валидация объекта для сохранения.
        /// </summary>
        /// <returns>true - продолжать сохранение, иначе - прекратить.</returns>
        protected override bool PreSaveObject()
        {
            return base.PreSaveObject();
        }

        /// <summary>
        /// Нетривиальная логика сохранения объекта.
        /// </summary>
        /// <returns>Объект данных, который сохранился.</returns>
        protected override DataObject SaveObject()
        {
            return base.SaveObject();
        }

        protected override void SaveBtn_Click(object sender, System.Web.UI.ImageClickEventArgs e)
        {
            if (this.DataObject.EmployeeTake != null &&
                this.DataObject.EndPoint != null)
            {
                RentSession.CloseSession(this.DataObject);
            }
            else
            {
                WebMessageBox.Show("Не все значения выбраны.");
            }
        }
        protected override void SaveAndCloseBtn_Click(object sender, System.Web.UI.ImageClickEventArgs e)
        {
            if (this.DataObject.EmployeeTake != null &&
                this.DataObject.EndPoint != null)
            {
                RentSession.CloseSession(this.DataObject);
                Response.Redirect("/forms/Rent/TakeBicycleL.aspx");
            }
            else
            {
                WebMessageBox.Show("Не все значения выбраны.");
            }
        }
    }
}
