/*flexberryautogenerated="false"*/

namespace Bicycle_rent
{
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Web.Controls;
    using ICSSoft.STORMNET.Web.AjaxControls;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.Business.LINQProvider;
    using System.Linq;

    public partial class GiveBicycleE : BaseEditForm<RentSession>
    {
        /// <summary>
        /// Конструктор формы.
        /// </summary>
        public GiveBicycleE()
            : base(RentSession.Views.GiveBicycleE)
        {
        }

        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/Rent/GiveBicycleE.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
        }

        /// <summary>
        /// Здесь лучше всего писать бизнес-логику, оперируя только объектом данных.
        /// </summary>
        protected override void PreApplyToControls()
        {
            var ds = DataServiceProvider.DataService;
            var query = ds.Query<Bicycle>(Bicycle.Views.BicycleL.Name)
                .Where(item => item.IsFree && item.State.Equals(BicycleState.Исправен));
            ctrlBicycle.LimitFunction = LinqToLcs.GetLcs(
                query.Expression, Bicycle.Views.BicycleL).LimitFunction;
        }

        /// <summary>
        /// Здесь лучше всего изменять свойства контролов на странице,
        /// которые не обрабатываются WebBinder.
        /// </summary>
        protected override void PostApplyToControls()
        {
            Page.Validate();
        }

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
        }

        /// <summary>
        /// Валидация объекта для сохранения.
        /// </summary>
        /// <returns>true - продолжать сохранение, иначе - прекратить.</returns>
        protected override bool PreSaveObject()
        {
            return base.PreSaveObject();
        }

        /// <summary>
        /// Нетривиальная логика сохранения объекта.
        /// </summary>
        /// <returns>Объект данных, который сохранился.</returns>
        protected override DataObject SaveObject()
        {
            return base.SaveObject();
        }

        protected override void SaveBtn_Click(object sender, System.Web.UI.ImageClickEventArgs e)
        {
            base.SaveBtn_Click(sender, e);
            var ds = (SQLDataService)DataServiceProvider.DataService;

            var bicycle = new Bicycle();
            bicycle.SetExistObjectPrimaryKey(this.DataObject.Bicycle.__PrimaryKey);
            ds.LoadObject(bicycle);

            bicycle.CurPoint = null;
            bicycle.IsFree = false;
            ds.UpdateObject(bicycle);

            Response.Redirect("/");
        }
    }
}
