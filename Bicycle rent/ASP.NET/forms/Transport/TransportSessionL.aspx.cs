/*flexberryautogenerated="false"*/
namespace Bicycle_rent
{
    using System;
    using ICSSoft.STORMNET.Web.Controls;

    using Resources;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.Security;
    using ICSSoft.Services;
    using NewPlatform.Flexberry.Security;
    public partial class TransportSessionL : BaseListForm<TransportSession>
    {
        /// <summary>
        /// Конструктор без параметров,
        /// инициализирует свойства, соответствующие конкретной форме.
        /// </summary>
        public TransportSessionL() : base(TransportSession.Views.TransportSessionL)
        {
            EditPage = TransportSessionE.FormPath;
        }
                
        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/Transport/TransportSessionL.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
            WebObjectListView1.Operations.New = false;
            WebObjectListView1.Operations.NewByExampleInRow = false;

            var sm = DataServiceProvider.DataService.SecurityManager;

            var login = CurrentUserService.CurrentUser.Login;
            if (new UserManager(DataServiceProvider.DataService, new Md5PasswordHasher())
                .IsUserInRole(login, "Менеджер"))
            {
                WebObjectListView1.Operations.EditInRow = false;
                WebObjectListView1.Operations.EditOnClickInRow = false;
            }

            if (!sm.AccessObjectCheck(typeof(RentSession), tTypeAccess.Delete, false))
            {
                WebObjectListView1.Operations.Delete = false;
            }

            if (!sm.AccessObjectCheck(typeof(RentSession), tTypeAccess.Update, false))
            {
                WebObjectListView1.Operations.EditInRow = false;
                WebObjectListView1.Operations.EditOnClickInRow = false;
            }
        }

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
        }
    }
}
